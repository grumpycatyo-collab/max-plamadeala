---
import Callout from './Callout.astro';

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // remove the first "/"
---

<header>
  <div class="container header-container">
    <div class="logo">
      <a href="/">@grumpycatyo-collab</a>
    </div>
    <nav>
      <ul>
        <li class={currentPath === "about" ? "active" : ""}>
          <a href="/about">About me</a>
        </li>
        <li class={currentPath === "projects" ? "active" : ""}>
          <a href="/projects">Projects</a>
        </li>
        <li class={currentPath === "articles" ? "active" : ""}>
          <a href="/articles">Articles</a>
        </li>
      </ul>
    </nav>
    <button id="theme-toggle" aria-label="Toggle dark mode">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sun-icon">
        <circle cx="12" cy="12" r="5"></circle>
        <line x1="12" y1="1" x2="12" y2="3"></line>
        <line x1="12" y1="21" x2="12" y2="23"></line>
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
        <line x1="1" y1="12" x2="3" y2="12"></line>
        <line x1="21" y1="12" x2="23" y2="12"></line>
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
      </svg>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="moon-icon">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
      </svg>
    </button>
  </div>
</header>

<style>
  header {
    padding: 1.5rem 0;
  }

  .header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo a {
    font-family: 'JetBrains Mono', monospace;
    font-size: 1.25rem;
    font-weight: 500;
    color: var(--text-color);
    text-decoration: none;
    letter-spacing: -0.025em;
  }

  nav ul {
    display: flex;
    gap: 1.5rem;
    list-style: none;
    padding: 0;
    margin: 0;
    align-items: center;
  }

  nav a {
    color: var(--muted-color);
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.2s ease;
  }

  nav a:hover {
    color: var(--accent-color);
  }

  nav li.active a {
    color: var(--text-color);
    font-weight: 500;
  }

  #theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--muted-color);
    width: 2rem;
    height: 2rem;
    padding: 0.25rem;
    border-radius: 0.25rem;
    transition: color 0.2s, background-color 0.2s;
  }

  #theme-toggle:hover {
    color: var(--text-color);
    background-color: rgba(128, 128, 128, 0.1);
  }

  #theme-toggle svg {
    width: 1.25rem;
    height: 1.25rem;
  }

  .sun-icon {
    display: none;
  }

  .moon-icon {
    display: block;
  }

  :global(.dark) .sun-icon {
    display: block;
  }

  :global(.dark) .moon-icon {
    display: none;
  }

  @media (max-width: 600px) {
    .header-container {
      flex-direction: column;
      gap: 1rem;
    }

    nav ul {
      gap: 1rem;
    }

    #theme-toggle {
      position: absolute;
      top: 1.5rem;
      right: 1.5rem;
    }
  }
</style>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  
  themeToggle.addEventListener('click', () => {
    const isDark = document.documentElement.classList.contains('dark');
    
    if (isDark) {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    } else {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    }
  });
</script>